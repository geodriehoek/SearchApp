algemene topics/vragen:
    - heeft philippe voorkeur tussen:
        - extra logica om scheiding tussen getOne en getList te maken   <->    alles returned List, getOne is List.get(0)
    - algemene return-info overkoepelt alle repo-methoden?
    - veel kleine object-klassen gemaakt: pagination: 2; searchform: 3
        -> goede oplossing?
            -> geneste klassen beter?
                - paginationDirection subklasse van paginationObject
                - ratingOptions, sortOptions subklasse van searchForm


GEDAAN:
    - index/delete/update
    - REST api/swagger
    - refresh van resultList na details/delete.
        -> instance var van Controller nl. searchForm
    - pagination
        -> search/from
        -> href -> getDIRECTIONPage() -> wijziging PaginationObject.direction -> redirect: resultList

TODO:   - search From/Size impl
            => momenteel nog compleet onafhankelijk van limiet van results/ waar checken?
            -> "A field with one unique value per document should be used as the tiebreaker of the sort specification.
                Otherwise the sort order for documents that have the same sort values would be undefined.
                The recommended way is to use the field _id which is certain to contain one unique value for each document."
                https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-search-after.html
            -> alternatief search_after (gelijkaardig aan scroll, doch stateless)
        - id weg uit Product, normaal nergens gebruikt, zeker checken
            -> ProductController.delete(id) zal mogelijks moeilijk doen
            -> grp_id is idem als _id => alle methoden die op upc12 zoeken -> op grp_id zoeken
            -> helper.GrpIdFromUpc12(upc12) returns String Grp_id
            -> service.GrpIdFromUpc12(upc12) returns String Grp_id
        - index from file?
        - exceptioncatching en logging optimaliseren -> aspects?
            -> productRepository
            -> productHelper
        - suggesters
        - ajax facets


kleine vragen philippe
----------------------
    - RestAPI review
        - ProductController.delete() is @GetMapping, moet dit DELETE zijn, of enkel voor rest-api?
        - best practices rond enum-parameters van api-search: api/search/{string}/{customerRating}/...
    - pagination review
    - @ModelAttribute vragen aan philippe of goed als instance-var/ elders met queryparams
    - Thread.sleep() om NPE te vermijden
        -> Controller.update() -> update waarna refresh/ refresh te vroeg zodat ungeupdate entry getoond wordt
            -> mogelijkheid: asynchrone melding van save, waarna redirect?



VRAGEN THEORIE/PRACTICES VOOR PHILIPPE
--------------------------------------
    - exception handling
    - testing
        -> beiden vnl theoretisch/conceptueel interessant aangezien praktischeid relatief simpel is??
    - git??
    - validatie
    - logging